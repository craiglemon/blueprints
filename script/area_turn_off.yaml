blueprint:
  name: Area Turn Off
  description: Blueprint of domain script to turn off all devices in a selected Home Assistant area.
  source_url: https://github.com/craiglemon/blueprints/blob/master/script/area_turn_off.yaml
  domain: script
  input:
    area:
      name: Area to Shutdown
      description: Select the Home Assistant Area whose devices you want to turn off.
      selector:
        area: {}
    primary_domains:
      name: Primary domains to Turn Off
      description: >
        Comma-separated list of primary domains (e.g. 'switch,light,fan,media_player').
      default: switch,light,fan,media_player
      selector:
        text: {}
    exclude_entities:
      name: Entities to exclude
      description: An array of entity IDs to ignore.
      default: []
      selector:
        entity:
          multiple: true
    retry_count: 
      name: Retry count
      description: Number of times to retry turning off devices if they fail.
      default: 3
      selector:
        number: {}
    retry_delay:
      name: Retry delay
      description: Delay in seconds between retries.
      default: 5
      selector:
        number: {}
    on_states:
      name: On States
      description: Comma-separated list of states that indicate a device is "on".
      default: 'on,playing,home,open'
      selector:
        text: {}
      
mode: single

variables:
  input_area: !input area
  input_primary_domains: !input primary_domains
  input_exclude_entities: !input exclude_entities
  input_retry_count: !input retry_count
  input_retry_delay: !input retry_delay
  input_on_states: !input on_states

sequence:
  - variables:
      # Get all the entities in the room, then filter by domain and exclude list
      

      primary_entities: |-
        {{ 
          expand(area_entities(input_area)) |
            rejectattr('entity_id','in',input_exclude_entities) | 
            selectattr('domain','in',input_primary_domains.split(',') | map('trim') | list) | 
            map(attribute='entity_id') | 
            list 
        }}
      climate_entities: |-
        {{ 
          expand(area_entities(input_area)) |
            rejectattr('entity_id','in',input_exclude_entities) | 
            selectattr('domain','equalto','climate') | 
            map(attribute='entity_id') | 
            list 
        }}
      cover_entities: |-
        {{ 
          expand(area_entities(input_area)) |
            rejectattr('entity_id','in',input_exclude_entities) | 
            selectattr('domain','equalto','cover') | 
            map(attribute='entity_id') | 
            list 
        }}
  
  # 1. Turn Off Primary devices
  - choose:
    - conditions: 
        - condition: template
          value_template: "{{ primary_entities | length > 0 }}"
      sequence:
        - service: homeassistant.turn_off
          target:
            entity_id: "{{ primary_entities | join(', ') }}"

  # 2. Turn Off Climate devices
  - choose:
    - conditions: 
        - condition: template
          value_template: "{{ climate_entities | length > 0 }}"
      sequence:
        - service: climate.set_hvac_mode
          target:
            entity_id: "{{ climate_entities | join(', ') }}"
          data:
            hvac_mode: 'off'

  # 3. Close Covers
  - choose:
    - conditions: 
        - condition: template
          value_template: "{{ cover_entities | length > 0 }}"
      sequence:
        - service: cover.close_cover
          target:
            entity_id: "{{ cover_entities | join(', ') }}"
              
  # 4. Retry any entities that are still "on"
  - repeat:
      count: "{{ input_retry_count }}"
      sequence:
        - delay:
            seconds: "{{ input_retry_delay }}"
        - variables:
            still_on_entities: |-
              {{ 
                expand(area_entities(input_area)) |
                  rejectattr('entity_id','in',input_exclude_entities) | 
                  selectattr('state','in',input_on_states.split(',') | map('trim') | list) |
                  selectattr('domain','in',input_primary_domains.split(',') | map('trim') | list) | 
                  map(attribute='entity_id') |
                  list 
              }}
        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ still_on_entities | length > 0 }}"
              sequence:
                - service: homeassistant.turn_off
                  target:
                    entity_id: "{{ still_on_entities | join(', ') }}"
                  
  # 5. Final log message
  - variables:
      final_still_on_entities: |-
        {{ 
          expand(area_entities(input_area)) |
            rejectattr('entity_id','in',input_exclude_entities) | 
            selectattr('state','in',input_on_states.split(',') | map('trim') | list) |
            selectattr('domain','in',input_primary_domains.split(',') | map('trim') | list) | 
            map(attribute='entity_id') |
            list 
        }}
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ final_still_on_entities | length > 0 }}"
        sequence:
          - service: persistent_notification.create
            data:
              title: Devices still on
              message: >
                Devices still on in area [{{ input_area }}]:  {{ final_still_on_entities | join(', ') }}
